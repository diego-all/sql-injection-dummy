version: '3.9'


networks:
  zapnet:  # Red dedicada para el escaneo
    driver: bridge

services:
  # Start Postgres, and ensure that data is stored to a mounted volume

  # serviceName
  postgres_sqli:
    # Pending: Connect with Dockerfile
    # build:
    #  context: ./database
    #  dockerfile: ./database/Dockerfile

    # Assign the image or build the image on development process
    #image: 'diegoall1990/sqli-pg-db:0.0.1'
    image: 'diegoall1990/linux-sqli-pg-db:0.0.1'
    container_name: linux_postgres_sqli_eafit
    ports:
      - "54327:5432"
    restart: always

    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

# Bad security practice
    # environment:
    #   NOMBRE=${NOMBRE}
    #   POSTGRES_USER: postgres
    #   POSTGRES_PASSWORD: password
    #   POSTGRES_DB: sqli
    volumes:
      #- ./db-data/postgres/:/var/lib/postgresql/data/
      - ./db-data/postgres/:/var/lib/postgresql/data/:rw
    networks:
      - zapnet

# Deployment artifacts
    deploy:
     mode: replicated
     replicas: 1

  api:
    build:
      context: .
      dockerfile: ./cmd/api/Dockerfile
    container_name: golang_api_sqli
    ports:
      - "9090:9090"
    depends_on:
      - postgres_sqli
    environment:
      - DSN=host=postgres_sqli port=5432 user=postgres password=password dbname=sqli sslmode=disable timezone=UTC connect_timeout=5
    networks:
      - zapnet

  zap:
    image: ghcr.io/zaproxy/zap-stable
    container_name: zap-scanner
    depends_on:
      - api
    networks:
      - zapnet
    entrypoint: ["sleep", "infinity"]