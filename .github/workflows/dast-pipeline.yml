name: DAST Pipeline Golang API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_scan:
    name: Build, Deploy and Run DAST
    runs-on: ubuntu-latest

    env:  # <- AquÃ­ agregamos los secrets como variables de entorno
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DSN: ${{ secrets.DSN }}
      BINARY_NAME: ${{ secrets.BINARY_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Build and Start containers
        run: |
          docker-compose up --build -d
          sleep 20  # esperamos que levante DB y API

      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker exec zap-scanner zap-baseline.py -t http://api:9090 -r zap-report.html -I || true

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP Report
          path: zap-report.html

      - name: Stop and Clean containers
        run: docker-compose down -v --rmi all
